/* 
 * Weather API
 *
 *  # Introduction  WeatherAPI.com provides access to weather and geo data via a JSON/XML restful API. It allows developers to create desktop, web and mobile applications using this data very easy.   We provide following data through our API:    * Real-time weather<br />    * 14 day weather forecast<br />    * Astronomy<br />    * Time zone<br />    * Location data<br />    * Search or Autocomplete API<br />    * NEW: Historical weather      * NEW: Future Weather (Upto 300 days ahead)      * Weather Alerts      * Air Quality Data  # Getting Started  You need to [signup](https://www.weatherapi.com/signup.aspx) and then you can find your API key under [your account](https://www.weatherapi.com/login.aspx), and start using API right away!  We have [code libraries](https://www.weatherapi.com/docs/code-libraries.aspx) for different programming languages like PHP, .net, JAVA, etc.  If you find any features missing or have any suggestions, please [contact us](https://www.weatherapi.com/contact.aspx).  # Authentication  API access to the data is protected by an API key. If at anytime, you find the API key has become vulnerable, please regenerate the key using Regenerate button next to the API key.  Authentication to the WeatherAPI.com API is provided by passing your API key as request parameter through an API .    ##  key parameter   key=\\<YOUR API KEY\\> 
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Current
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CurrentTests
    {
        // TODO uncomment below to declare an instance variable for Current
        //private Current instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Current
            //instance = new Current();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Current
        /// </summary>
        [Test]
        public void CurrentInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Current
            //Assert.IsInstanceOfType<Current> (instance, "variable 'instance' is a Current");
        }


        /// <summary>
        /// Test the property 'LastUpdatedEpoch'
        /// </summary>
        [Test]
        public void LastUpdatedEpochTest()
        {
            // TODO unit test for the property 'LastUpdatedEpoch'
        }
        /// <summary>
        /// Test the property 'LastUpdated'
        /// </summary>
        [Test]
        public void LastUpdatedTest()
        {
            // TODO unit test for the property 'LastUpdated'
        }
        /// <summary>
        /// Test the property 'TempC'
        /// </summary>
        [Test]
        public void TempCTest()
        {
            // TODO unit test for the property 'TempC'
        }
        /// <summary>
        /// Test the property 'TempF'
        /// </summary>
        [Test]
        public void TempFTest()
        {
            // TODO unit test for the property 'TempF'
        }
        /// <summary>
        /// Test the property 'IsDay'
        /// </summary>
        [Test]
        public void IsDayTest()
        {
            // TODO unit test for the property 'IsDay'
        }
        /// <summary>
        /// Test the property 'Condition'
        /// </summary>
        [Test]
        public void ConditionTest()
        {
            // TODO unit test for the property 'Condition'
        }
        /// <summary>
        /// Test the property 'WindMph'
        /// </summary>
        [Test]
        public void WindMphTest()
        {
            // TODO unit test for the property 'WindMph'
        }
        /// <summary>
        /// Test the property 'WindKph'
        /// </summary>
        [Test]
        public void WindKphTest()
        {
            // TODO unit test for the property 'WindKph'
        }
        /// <summary>
        /// Test the property 'WindDegree'
        /// </summary>
        [Test]
        public void WindDegreeTest()
        {
            // TODO unit test for the property 'WindDegree'
        }
        /// <summary>
        /// Test the property 'WindDir'
        /// </summary>
        [Test]
        public void WindDirTest()
        {
            // TODO unit test for the property 'WindDir'
        }
        /// <summary>
        /// Test the property 'PressureMb'
        /// </summary>
        [Test]
        public void PressureMbTest()
        {
            // TODO unit test for the property 'PressureMb'
        }
        /// <summary>
        /// Test the property 'PressureIn'
        /// </summary>
        [Test]
        public void PressureInTest()
        {
            // TODO unit test for the property 'PressureIn'
        }
        /// <summary>
        /// Test the property 'PrecipMm'
        /// </summary>
        [Test]
        public void PrecipMmTest()
        {
            // TODO unit test for the property 'PrecipMm'
        }
        /// <summary>
        /// Test the property 'PrecipIn'
        /// </summary>
        [Test]
        public void PrecipInTest()
        {
            // TODO unit test for the property 'PrecipIn'
        }
        /// <summary>
        /// Test the property 'Humidity'
        /// </summary>
        [Test]
        public void HumidityTest()
        {
            // TODO unit test for the property 'Humidity'
        }
        /// <summary>
        /// Test the property 'Cloud'
        /// </summary>
        [Test]
        public void CloudTest()
        {
            // TODO unit test for the property 'Cloud'
        }
        /// <summary>
        /// Test the property 'FeelslikeC'
        /// </summary>
        [Test]
        public void FeelslikeCTest()
        {
            // TODO unit test for the property 'FeelslikeC'
        }
        /// <summary>
        /// Test the property 'FeelslikeF'
        /// </summary>
        [Test]
        public void FeelslikeFTest()
        {
            // TODO unit test for the property 'FeelslikeF'
        }
        /// <summary>
        /// Test the property 'VisKm'
        /// </summary>
        [Test]
        public void VisKmTest()
        {
            // TODO unit test for the property 'VisKm'
        }
        /// <summary>
        /// Test the property 'VisMiles'
        /// </summary>
        [Test]
        public void VisMilesTest()
        {
            // TODO unit test for the property 'VisMiles'
        }
        /// <summary>
        /// Test the property 'Uv'
        /// </summary>
        [Test]
        public void UvTest()
        {
            // TODO unit test for the property 'Uv'
        }
        /// <summary>
        /// Test the property 'GustMph'
        /// </summary>
        [Test]
        public void GustMphTest()
        {
            // TODO unit test for the property 'GustMph'
        }
        /// <summary>
        /// Test the property 'GustKph'
        /// </summary>
        [Test]
        public void GustKphTest()
        {
            // TODO unit test for the property 'GustKph'
        }
        /// <summary>
        /// Test the property 'AirQuality'
        /// </summary>
        [Test]
        public void AirQualityTest()
        {
            // TODO unit test for the property 'AirQuality'
        }

    }

}

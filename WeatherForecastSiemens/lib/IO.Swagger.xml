<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IO.Swagger</name>
    </assembly>
    <members>
        <member name="T:IO.Swagger.Api.IAPIsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:IO.Swagger.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:IO.Swagger.Client.IApiAccessor.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.Astronomy(System.String,System.Nullable{System.DateTime})">
            <summary>
            Astronomy API
            </summary>
            <remarks>
            Return Location and Astronomy Object
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <returns>InlineResponse2003</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.AstronomyWithHttpInfo(System.String,System.Nullable{System.DateTime})">
            <summary>
            Astronomy API
            </summary>
            <remarks>
            Return Location and Astronomy Object
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <returns>ApiResponse of InlineResponse2003</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.ForecastWeather(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Forecast API
            </summary>
            <remarks>
            Forecast weather API method returns upto next 10 day weather forecast and weather alert as json. The data is returned as a Forecast Object.&lt;br /&gt;&lt;br /&gt;Forecast object contains astronomy data, day weather forecast and hourly interval weather information for a given city.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="days">Number of days of weather forecast. Value ranges from 1 to 14</param>
            <param name="dt">Date should be between today and next 14 day in yyyy-MM-dd format. e.g. '2015-01-01' (optional)</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request. unixdt should be between today and next 14 day in Unix format. e.g. 1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>InlineResponse2001</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.ForecastWeatherWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Forecast API
            </summary>
            <remarks>
            Forecast weather API method returns upto next 10 day weather forecast and weather alert as json. The data is returned as a Forecast Object.&lt;br /&gt;&lt;br /&gt;Forecast object contains astronomy data, day weather forecast and hourly interval weather information for a given city.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="days">Number of days of weather forecast. Value ranges from 1 to 14</param>
            <param name="dt">Date should be between today and next 14 day in yyyy-MM-dd format. e.g. '2015-01-01' (optional)</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request. unixdt should be between today and next 14 day in Unix format. e.g. 1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>ApiResponse of InlineResponse2001</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.FutureWeather(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Future API
            </summary>
            <remarks>
            Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01) (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.FutureWeatherWithHttpInfo(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Future API
            </summary>
            <remarks>
            Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01) (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>ApiResponse of InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.HistoryWeather(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            History API
            </summary>
            <remarks>
            History weather API method returns historical weather for a date on or after 1st Jan, 2010 as json. The data is returned as a Forecast Object.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request.&lt;br /&gt;unixdt should be on or after 1st Jan, 2015 in Unix format (optional)</param>
            <param name="endDt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format&lt;br /&gt;'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates. (optional)</param>
            <param name="unixendDt">Date on or after 1st Jan, 2015 in Unix Timestamp format&lt;br /&gt;unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g. unixend_dt=1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.HistoryWeatherWithHttpInfo(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            History API
            </summary>
            <remarks>
            History weather API method returns historical weather for a date on or after 1st Jan, 2010 as json. The data is returned as a Forecast Object.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request.&lt;br /&gt;unixdt should be on or after 1st Jan, 2015 in Unix format (optional)</param>
            <param name="endDt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format&lt;br /&gt;'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates. (optional)</param>
            <param name="unixendDt">Date on or after 1st Jan, 2015 in Unix Timestamp format&lt;br /&gt;unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g. unixend_dt=1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>ApiResponse of InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.IpLookup(System.String)">
            <summary>
            IP Lookup API
            </summary>
            <remarks>
            IP Lookup API method allows a user to get up to date information for an IP address.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass IP address.</param>
            <returns>Ip</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.IpLookupWithHttpInfo(System.String)">
            <summary>
            IP Lookup API
            </summary>
            <remarks>
            IP Lookup API method allows a user to get up to date information for an IP address.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass IP address.</param>
            <returns>ApiResponse of Ip</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.RealtimeWeather(System.String,System.String)">
            <summary>
            Realtime API
            </summary>
            <remarks>
            Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.&lt;br /&gt;&lt;br /&gt;Current object contains current or realtime weather information for a given city.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>InlineResponse200</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.RealtimeWeatherWithHttpInfo(System.String,System.String)">
            <summary>
            Realtime API
            </summary>
            <remarks>
            Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.&lt;br /&gt;&lt;br /&gt;Current object contains current or realtime weather information for a given city.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>ApiResponse of InlineResponse200</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.SearchAutocompleteWeather(System.String)">
            <summary>
            Search/Autocomplete API
            </summary>
            <remarks>
            WeatherAPI.com Search or Autocomplete API returns matching cities and towns as an array of Location object.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>ArrayOfSearch</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.SearchAutocompleteWeatherWithHttpInfo(System.String)">
            <summary>
            Search/Autocomplete API
            </summary>
            <remarks>
            WeatherAPI.com Search or Autocomplete API returns matching cities and towns as an array of Location object.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>ApiResponse of ArrayOfSearch</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.TimeZone(System.String)">
            <summary>
            Time Zone API
            </summary>
            <remarks>
            Return Location Object
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Location</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.TimeZoneWithHttpInfo(System.String)">
            <summary>
            Time Zone API
            </summary>
            <remarks>
            Return Location Object
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>ApiResponse of Location</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.AstronomyAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Astronomy API
            </summary>
            <remarks>
            Return Location and Astronomy Object
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <returns>Task of InlineResponse2003</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.AstronomyAsyncWithHttpInfo(System.String,System.Nullable{System.DateTime})">
            <summary>
            Astronomy API
            </summary>
            <remarks>
            Return Location and Astronomy Object
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <returns>Task of ApiResponse (InlineResponse2003)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.ForecastWeatherAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Forecast API
            </summary>
            <remarks>
            Forecast weather API method returns upto next 10 day weather forecast and weather alert as json. The data is returned as a Forecast Object.&lt;br /&gt;&lt;br /&gt;Forecast object contains astronomy data, day weather forecast and hourly interval weather information for a given city.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="days">Number of days of weather forecast. Value ranges from 1 to 14</param>
            <param name="dt">Date should be between today and next 14 day in yyyy-MM-dd format. e.g. '2015-01-01' (optional)</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request. unixdt should be between today and next 14 day in Unix format. e.g. 1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of InlineResponse2001</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.ForecastWeatherAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Forecast API
            </summary>
            <remarks>
            Forecast weather API method returns upto next 10 day weather forecast and weather alert as json. The data is returned as a Forecast Object.&lt;br /&gt;&lt;br /&gt;Forecast object contains astronomy data, day weather forecast and hourly interval weather information for a given city.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="days">Number of days of weather forecast. Value ranges from 1 to 14</param>
            <param name="dt">Date should be between today and next 14 day in yyyy-MM-dd format. e.g. '2015-01-01' (optional)</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request. unixdt should be between today and next 14 day in Unix format. e.g. 1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of ApiResponse (InlineResponse2001)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.FutureWeatherAsync(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Future API
            </summary>
            <remarks>
            Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01) (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.FutureWeatherAsyncWithHttpInfo(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Future API
            </summary>
            <remarks>
            Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01) (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of ApiResponse (InlineResponse2002)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.HistoryWeatherAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            History API
            </summary>
            <remarks>
            History weather API method returns historical weather for a date on or after 1st Jan, 2010 as json. The data is returned as a Forecast Object.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request.&lt;br /&gt;unixdt should be on or after 1st Jan, 2015 in Unix format (optional)</param>
            <param name="endDt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format&lt;br /&gt;'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates. (optional)</param>
            <param name="unixendDt">Date on or after 1st Jan, 2015 in Unix Timestamp format&lt;br /&gt;unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g. unixend_dt=1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.HistoryWeatherAsyncWithHttpInfo(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            History API
            </summary>
            <remarks>
            History weather API method returns historical weather for a date on or after 1st Jan, 2010 as json. The data is returned as a Forecast Object.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request.&lt;br /&gt;unixdt should be on or after 1st Jan, 2015 in Unix format (optional)</param>
            <param name="endDt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format&lt;br /&gt;'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates. (optional)</param>
            <param name="unixendDt">Date on or after 1st Jan, 2015 in Unix Timestamp format&lt;br /&gt;unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g. unixend_dt=1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of ApiResponse (InlineResponse2002)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.IpLookupAsync(System.String)">
            <summary>
            IP Lookup API
            </summary>
            <remarks>
            IP Lookup API method allows a user to get up to date information for an IP address.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass IP address.</param>
            <returns>Task of Ip</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.IpLookupAsyncWithHttpInfo(System.String)">
            <summary>
            IP Lookup API
            </summary>
            <remarks>
            IP Lookup API method allows a user to get up to date information for an IP address.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass IP address.</param>
            <returns>Task of ApiResponse (Ip)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.RealtimeWeatherAsync(System.String,System.String)">
            <summary>
            Realtime API
            </summary>
            <remarks>
            Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.&lt;br /&gt;&lt;br /&gt;Current object contains current or realtime weather information for a given city.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of InlineResponse200</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.RealtimeWeatherAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Realtime API
            </summary>
            <remarks>
            Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.&lt;br /&gt;&lt;br /&gt;Current object contains current or realtime weather information for a given city.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of ApiResponse (InlineResponse200)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.SearchAutocompleteWeatherAsync(System.String)">
            <summary>
            Search/Autocomplete API
            </summary>
            <remarks>
            WeatherAPI.com Search or Autocomplete API returns matching cities and towns as an array of Location object.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Task of ArrayOfSearch</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.SearchAutocompleteWeatherAsyncWithHttpInfo(System.String)">
            <summary>
            Search/Autocomplete API
            </summary>
            <remarks>
            WeatherAPI.com Search or Autocomplete API returns matching cities and towns as an array of Location object.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Task of ApiResponse (ArrayOfSearch)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.TimeZoneAsync(System.String)">
            <summary>
            Time Zone API
            </summary>
            <remarks>
            Return Location Object
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Task of Location</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAPIsApi.TimeZoneAsyncWithHttpInfo(System.String)">
            <summary>
            Time Zone API
            </summary>
            <remarks>
            Return Location Object
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Task of ApiResponse (Location)</returns>
        </member>
        <member name="T:IO.Swagger.Api.APIsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.APIsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.APIsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.APIsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.Astronomy(System.String,System.Nullable{System.DateTime})">
            <summary>
            Astronomy API Return Location and Astronomy Object
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <returns>InlineResponse2003</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.AstronomyWithHttpInfo(System.String,System.Nullable{System.DateTime})">
            <summary>
            Astronomy API Return Location and Astronomy Object
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <returns>ApiResponse of InlineResponse2003</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.AstronomyAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Astronomy API Return Location and Astronomy Object
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <returns>Task of InlineResponse2003</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.AstronomyAsyncWithHttpInfo(System.String,System.Nullable{System.DateTime})">
            <summary>
            Astronomy API Return Location and Astronomy Object
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <returns>Task of ApiResponse (InlineResponse2003)</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.ForecastWeather(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Forecast API Forecast weather API method returns upto next 10 day weather forecast and weather alert as json. The data is returned as a Forecast Object.&lt;br /&gt;&lt;br /&gt;Forecast object contains astronomy data, day weather forecast and hourly interval weather information for a given city.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="days">Number of days of weather forecast. Value ranges from 1 to 14</param>
            <param name="dt">Date should be between today and next 14 day in yyyy-MM-dd format. e.g. '2015-01-01' (optional)</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request. unixdt should be between today and next 14 day in Unix format. e.g. 1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>InlineResponse2001</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.ForecastWeatherWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Forecast API Forecast weather API method returns upto next 10 day weather forecast and weather alert as json. The data is returned as a Forecast Object.&lt;br /&gt;&lt;br /&gt;Forecast object contains astronomy data, day weather forecast and hourly interval weather information for a given city.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="days">Number of days of weather forecast. Value ranges from 1 to 14</param>
            <param name="dt">Date should be between today and next 14 day in yyyy-MM-dd format. e.g. '2015-01-01' (optional)</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request. unixdt should be between today and next 14 day in Unix format. e.g. 1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>ApiResponse of InlineResponse2001</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.ForecastWeatherAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Forecast API Forecast weather API method returns upto next 10 day weather forecast and weather alert as json. The data is returned as a Forecast Object.&lt;br /&gt;&lt;br /&gt;Forecast object contains astronomy data, day weather forecast and hourly interval weather information for a given city.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="days">Number of days of weather forecast. Value ranges from 1 to 14</param>
            <param name="dt">Date should be between today and next 14 day in yyyy-MM-dd format. e.g. '2015-01-01' (optional)</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request. unixdt should be between today and next 14 day in Unix format. e.g. 1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of InlineResponse2001</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.ForecastWeatherAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Forecast API Forecast weather API method returns upto next 10 day weather forecast and weather alert as json. The data is returned as a Forecast Object.&lt;br /&gt;&lt;br /&gt;Forecast object contains astronomy data, day weather forecast and hourly interval weather information for a given city.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="days">Number of days of weather forecast. Value ranges from 1 to 14</param>
            <param name="dt">Date should be between today and next 14 day in yyyy-MM-dd format. e.g. '2015-01-01' (optional)</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request. unixdt should be between today and next 14 day in Unix format. e.g. 1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of ApiResponse (InlineResponse2001)</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.FutureWeather(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Future API Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01) (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.FutureWeatherWithHttpInfo(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Future API Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01) (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>ApiResponse of InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.FutureWeatherAsync(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Future API Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01) (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.FutureWeatherAsyncWithHttpInfo(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Future API Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01) (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of ApiResponse (InlineResponse2002)</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.HistoryWeather(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            History API History weather API method returns historical weather for a date on or after 1st Jan, 2010 as json. The data is returned as a Forecast Object.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request.&lt;br /&gt;unixdt should be on or after 1st Jan, 2015 in Unix format (optional)</param>
            <param name="endDt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format&lt;br /&gt;'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates. (optional)</param>
            <param name="unixendDt">Date on or after 1st Jan, 2015 in Unix Timestamp format&lt;br /&gt;unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g. unixend_dt=1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.HistoryWeatherWithHttpInfo(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            History API History weather API method returns historical weather for a date on or after 1st Jan, 2010 as json. The data is returned as a Forecast Object.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request.&lt;br /&gt;unixdt should be on or after 1st Jan, 2015 in Unix format (optional)</param>
            <param name="endDt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format&lt;br /&gt;'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates. (optional)</param>
            <param name="unixendDt">Date on or after 1st Jan, 2015 in Unix Timestamp format&lt;br /&gt;unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g. unixend_dt=1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>ApiResponse of InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.HistoryWeatherAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            History API History weather API method returns historical weather for a date on or after 1st Jan, 2010 as json. The data is returned as a Forecast Object.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request.&lt;br /&gt;unixdt should be on or after 1st Jan, 2015 in Unix format (optional)</param>
            <param name="endDt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format&lt;br /&gt;'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates. (optional)</param>
            <param name="unixendDt">Date on or after 1st Jan, 2015 in Unix Timestamp format&lt;br /&gt;unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g. unixend_dt=1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of InlineResponse2002</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.HistoryWeatherAsyncWithHttpInfo(System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            History API History weather API method returns historical weather for a date on or after 1st Jan, 2010 as json. The data is returned as a Forecast Object.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="dt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format</param>
            <param name="unixdt">Please either pass 'dt' or 'unixdt' and not both in same request.&lt;br /&gt;unixdt should be on or after 1st Jan, 2015 in Unix format (optional)</param>
            <param name="endDt">Date on or after 1st Jan, 2015 in yyyy-MM-dd format&lt;br /&gt;'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates. (optional)</param>
            <param name="unixendDt">Date on or after 1st Jan, 2015 in Unix Timestamp format&lt;br /&gt;unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g. unixend_dt=1490227200 (optional)</param>
            <param name="hour">Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6 (optional)</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of ApiResponse (InlineResponse2002)</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.IpLookup(System.String)">
            <summary>
            IP Lookup API IP Lookup API method allows a user to get up to date information for an IP address.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass IP address.</param>
            <returns>Ip</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.IpLookupWithHttpInfo(System.String)">
            <summary>
            IP Lookup API IP Lookup API method allows a user to get up to date information for an IP address.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass IP address.</param>
            <returns>ApiResponse of Ip</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.IpLookupAsync(System.String)">
            <summary>
            IP Lookup API IP Lookup API method allows a user to get up to date information for an IP address.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass IP address.</param>
            <returns>Task of Ip</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.IpLookupAsyncWithHttpInfo(System.String)">
            <summary>
            IP Lookup API IP Lookup API method allows a user to get up to date information for an IP address.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass IP address.</param>
            <returns>Task of ApiResponse (Ip)</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.RealtimeWeather(System.String,System.String)">
            <summary>
            Realtime API Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.&lt;br /&gt;&lt;br /&gt;Current object contains current or realtime weather information for a given city.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>InlineResponse200</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.RealtimeWeatherWithHttpInfo(System.String,System.String)">
            <summary>
            Realtime API Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.&lt;br /&gt;&lt;br /&gt;Current object contains current or realtime weather information for a given city.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>ApiResponse of InlineResponse200</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.RealtimeWeatherAsync(System.String,System.String)">
            <summary>
            Realtime API Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.&lt;br /&gt;&lt;br /&gt;Current object contains current or realtime weather information for a given city.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of InlineResponse200</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.RealtimeWeatherAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Realtime API Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.&lt;br /&gt;&lt;br /&gt;Current object contains current or realtime weather information for a given city.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <param name="lang">Returns 'condition:text' field in API in the desired language.&lt;br /&gt; Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to check 'lang-code'. (optional)</param>
            <returns>Task of ApiResponse (InlineResponse200)</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.SearchAutocompleteWeather(System.String)">
            <summary>
            Search/Autocomplete API WeatherAPI.com Search or Autocomplete API returns matching cities and towns as an array of Location object.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>ArrayOfSearch</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.SearchAutocompleteWeatherWithHttpInfo(System.String)">
            <summary>
            Search/Autocomplete API WeatherAPI.com Search or Autocomplete API returns matching cities and towns as an array of Location object.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>ApiResponse of ArrayOfSearch</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.SearchAutocompleteWeatherAsync(System.String)">
            <summary>
            Search/Autocomplete API WeatherAPI.com Search or Autocomplete API returns matching cities and towns as an array of Location object.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Task of ArrayOfSearch</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.SearchAutocompleteWeatherAsyncWithHttpInfo(System.String)">
            <summary>
            Search/Autocomplete API WeatherAPI.com Search or Autocomplete API returns matching cities and towns as an array of Location object.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Task of ApiResponse (ArrayOfSearch)</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.TimeZone(System.String)">
            <summary>
            Time Zone API Return Location Object
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Location</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.TimeZoneWithHttpInfo(System.String)">
            <summary>
            Time Zone API Return Location Object
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>ApiResponse of Location</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.TimeZoneAsync(System.String)">
            <summary>
            Time Zone API Return Location Object
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Task of Location</returns>
        </member>
        <member name="M:IO.Swagger.Api.APIsApi.TimeZoneAsyncWithHttpInfo(System.String)">
            <summary>
            Time Zone API Return Location Object
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="q">Pass US Zipcode, UK Postcode, Canada Postalcode, IP address, Latitude/Longitude (decimal degree) or city name. Visit [request parameter section](https://www.weatherapi.com/docs/#intro-request) to learn more.</param>
            <returns>Task of ApiResponse (Location)</returns>
        </member>
        <member name="P:IO.Swagger.Api.APIsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.APIsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient"/> class
            with default configuration.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient"/> class
            with default base path (https://api.weatherapi.com/v1).
            </summary>
            <param name="config">An instance of Configuration.</param>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient"/> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="F:IO.Swagger.Client.ApiClient.Default">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The default API client.</value>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            </summary>
            <param name="fromObject">Object to be casted</param>
            <param name="toObject">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs. 
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A list of KeyValuePairs</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.IsCollection(System.Object)">
            <summary>
            Check if generic object is a collection.
            </summary>
            <param name="value"></param>
            <returns>True if object is a collection type</returns>
        </member>
        <member name="P:IO.Swagger.Client.ApiClient.Configuration">
            <summary>
            Gets or sets an instance of the IReadableConfiguration.
            </summary>
            <value>An instance of the IReadableConfiguration.</value>
            <remarks>
            <see cref="T:IO.Swagger.Client.IReadableConfiguration"/> helps us to avoid modifying possibly global
            configuration values from within a given client. It does not guarantee thread-safety
            of the <see cref="P:IO.Swagger.Client.ApiClient.Configuration"/> instance in any way.
            </remarks>
        </member>
        <member name="P:IO.Swagger.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="T:IO.Swagger.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="T:IO.Swagger.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiResponse`1"/> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:IO.Swagger.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="T:IO.Swagger.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time foramt.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Timeout">
            <summary>
            Gets the HTTP connection timeout (in milliseconds)
            </summary>
            <value>HTTP connection timeout.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="F:IO.Swagger.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:IO.Swagger.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:IO.Swagger.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="F:IO.Swagger.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:IO.Swagger.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor(IO.Swagger.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration"/> class with different settings
            </summary>
            <param name="apiClient">Api client</param>
            <param name="defaultHeader">Dictionary of default HTTP header</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <param name="accessToken">accessToken</param>
            <param name="apiKey">Dictionary of API key</param>
            <param name="apiKeyPrefix">Dictionary of API key prefix</param>
            <param name="tempFolderPath">Temp folder path</param>
            <param name="dateTimeFormat">DateTime format string</param>
            <param name="timeout">HTTP connection timeout (in milliseconds)</param>
            <param name="userAgent">HTTP user agent</param>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor(IO.Swagger.Client.ApiClient)">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
            <param name="apiClient">Api client.</param>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.CreateApiClient">
            <summary>
            Creates a new <see cref="P:IO.Swagger.Client.Configuration.ApiClient"/> based on this <see cref="T:IO.Swagger.Client.Configuration"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiClient">
            <summary>
            Gets an instance of an ApiClient for this configuration
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Timeout">
            <summary>
            Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="T:IO.Swagger.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:IO.Swagger.Client.GlobalConfiguration">
            <summary>
            <see cref="T:IO.Swagger.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .swagger-codegen-ignore file.
            </remarks>
        </member>
        <member name="T:IO.Swagger.Client.SwaggerDateConverter">
            <summary>
            Formatter for 'date' swagger formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.SwaggerDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.SwaggerDateConverter"/> class.
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Alerts">
            <summary>
            Alerts
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Alerts.#ctor(System.Collections.Generic.List{IO.Swagger.Model.AlertsAlert})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Alerts"/> class.
            </summary>
            <param name="alert">alert.</param>
        </member>
        <member name="M:IO.Swagger.Model.Alerts.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Alerts.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Alerts.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Alerts.Equals(IO.Swagger.Model.Alerts)">
            <summary>
            Returns true if Alerts instances are equal
            </summary>
            <param name="input">Instance of Alerts to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Alerts.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Alerts.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Alerts.Alert">
            <summary>
            Gets or Sets Alert
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.AlertsAlert">
            <summary>
            AlertsAlert
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.AlertsAlert.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.AlertsAlert"/> class.
            </summary>
            <param name="headline">headline.</param>
            <param name="msgtype">msgtype.</param>
            <param name="severity">severity.</param>
            <param name="urgency">urgency.</param>
            <param name="areas">areas.</param>
            <param name="category">category.</param>
            <param name="certainty">certainty.</param>
            <param name="_event">_event.</param>
            <param name="note">note.</param>
            <param name="effective">effective.</param>
            <param name="expires">expires.</param>
            <param name="desc">desc.</param>
            <param name="instruction">instruction.</param>
        </member>
        <member name="M:IO.Swagger.Model.AlertsAlert.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AlertsAlert.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AlertsAlert.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AlertsAlert.Equals(IO.Swagger.Model.AlertsAlert)">
            <summary>
            Returns true if AlertsAlert instances are equal
            </summary>
            <param name="input">Instance of AlertsAlert to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AlertsAlert.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.AlertsAlert.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Headline">
            <summary>
            Gets or Sets Headline
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Msgtype">
            <summary>
            Gets or Sets Msgtype
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Severity">
            <summary>
            Gets or Sets Severity
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Urgency">
            <summary>
            Gets or Sets Urgency
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Areas">
            <summary>
            Gets or Sets Areas
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Category">
            <summary>
            Gets or Sets Category
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Certainty">
            <summary>
            Gets or Sets Certainty
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert._Event">
            <summary>
            Gets or Sets _Event
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Note">
            <summary>
            Gets or Sets Note
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Effective">
            <summary>
            Gets or Sets Effective
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Expires">
            <summary>
            Gets or Sets Expires
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Desc">
            <summary>
            Gets or Sets Desc
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AlertsAlert.Instruction">
            <summary>
            Gets or Sets Instruction
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ArrayOfSearch">
            <summary>
            ArrayOfSearch
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ArrayOfSearch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ArrayOfSearch"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ArrayOfSearch.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ArrayOfSearch.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ArrayOfSearch.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ArrayOfSearch.Equals(IO.Swagger.Model.ArrayOfSearch)">
            <summary>
            Returns true if ArrayOfSearch instances are equal
            </summary>
            <param name="input">Instance of ArrayOfSearch to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ArrayOfSearch.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ArrayOfSearch.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.Astronomy">
            <summary>
            Astronomy
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Astronomy.#ctor(IO.Swagger.Model.AstronomyAstro)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Astronomy"/> class.
            </summary>
            <param name="astro">astro.</param>
        </member>
        <member name="M:IO.Swagger.Model.Astronomy.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Astronomy.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Astronomy.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Astronomy.Equals(IO.Swagger.Model.Astronomy)">
            <summary>
            Returns true if Astronomy instances are equal
            </summary>
            <param name="input">Instance of Astronomy to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Astronomy.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Astronomy.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Astronomy.Astro">
            <summary>
            Gets or Sets Astro
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.AstronomyAstro">
            <summary>
            AstronomyAstro
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.AstronomyAstro.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.AstronomyAstro"/> class.
            </summary>
            <param name="sunrise">sunrise.</param>
            <param name="sunset">sunset.</param>
            <param name="moonrise">moonrise.</param>
            <param name="moonset">moonset.</param>
            <param name="moonPhase">moonPhase.</param>
            <param name="moonIllumination">moonIllumination.</param>
        </member>
        <member name="M:IO.Swagger.Model.AstronomyAstro.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AstronomyAstro.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AstronomyAstro.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AstronomyAstro.Equals(IO.Swagger.Model.AstronomyAstro)">
            <summary>
            Returns true if AstronomyAstro instances are equal
            </summary>
            <param name="input">Instance of AstronomyAstro to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AstronomyAstro.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.AstronomyAstro.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.AstronomyAstro.Sunrise">
            <summary>
            Gets or Sets Sunrise
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AstronomyAstro.Sunset">
            <summary>
            Gets or Sets Sunset
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AstronomyAstro.Moonrise">
            <summary>
            Gets or Sets Moonrise
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AstronomyAstro.Moonset">
            <summary>
            Gets or Sets Moonset
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AstronomyAstro.MoonPhase">
            <summary>
            Gets or Sets MoonPhase
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AstronomyAstro.MoonIllumination">
            <summary>
            Gets or Sets MoonIllumination
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Current">
            <summary>
            Current
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Current.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},IO.Swagger.Model.CurrentCondition,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},IO.Swagger.Model.CurrentAirQuality)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Current"/> class.
            </summary>
            <param name="lastUpdatedEpoch">lastUpdatedEpoch.</param>
            <param name="lastUpdated">lastUpdated.</param>
            <param name="tempC">tempC.</param>
            <param name="tempF">tempF.</param>
            <param name="isDay">isDay.</param>
            <param name="condition">condition.</param>
            <param name="windMph">windMph.</param>
            <param name="windKph">windKph.</param>
            <param name="windDegree">windDegree.</param>
            <param name="windDir">windDir.</param>
            <param name="pressureMb">pressureMb.</param>
            <param name="pressureIn">pressureIn.</param>
            <param name="precipMm">precipMm.</param>
            <param name="precipIn">precipIn.</param>
            <param name="humidity">humidity.</param>
            <param name="cloud">cloud.</param>
            <param name="feelslikeC">feelslikeC.</param>
            <param name="feelslikeF">feelslikeF.</param>
            <param name="visKm">visKm.</param>
            <param name="visMiles">visMiles.</param>
            <param name="uv">uv.</param>
            <param name="gustMph">gustMph.</param>
            <param name="gustKph">gustKph.</param>
            <param name="airQuality">airQuality.</param>
        </member>
        <member name="M:IO.Swagger.Model.Current.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Current.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Current.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Current.Equals(IO.Swagger.Model.Current)">
            <summary>
            Returns true if Current instances are equal
            </summary>
            <param name="input">Instance of Current to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Current.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Current.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Current.LastUpdatedEpoch">
            <summary>
            Gets or Sets LastUpdatedEpoch
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.LastUpdated">
            <summary>
            Gets or Sets LastUpdated
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.TempC">
            <summary>
            Gets or Sets TempC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.TempF">
            <summary>
            Gets or Sets TempF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.IsDay">
            <summary>
            Gets or Sets IsDay
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.Condition">
            <summary>
            Gets or Sets Condition
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.WindMph">
            <summary>
            Gets or Sets WindMph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.WindKph">
            <summary>
            Gets or Sets WindKph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.WindDegree">
            <summary>
            Gets or Sets WindDegree
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.WindDir">
            <summary>
            Gets or Sets WindDir
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.PressureMb">
            <summary>
            Gets or Sets PressureMb
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.PressureIn">
            <summary>
            Gets or Sets PressureIn
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.PrecipMm">
            <summary>
            Gets or Sets PrecipMm
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.PrecipIn">
            <summary>
            Gets or Sets PrecipIn
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.Humidity">
            <summary>
            Gets or Sets Humidity
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.Cloud">
            <summary>
            Gets or Sets Cloud
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.FeelslikeC">
            <summary>
            Gets or Sets FeelslikeC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.FeelslikeF">
            <summary>
            Gets or Sets FeelslikeF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.VisKm">
            <summary>
            Gets or Sets VisKm
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.VisMiles">
            <summary>
            Gets or Sets VisMiles
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.Uv">
            <summary>
            Gets or Sets Uv
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.GustMph">
            <summary>
            Gets or Sets GustMph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.GustKph">
            <summary>
            Gets or Sets GustKph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Current.AirQuality">
            <summary>
            Gets or Sets AirQuality
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.CurrentAirQuality">
            <summary>
            CurrentAirQuality
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.CurrentAirQuality.#ctor(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.CurrentAirQuality"/> class.
            </summary>
            <param name="co">co.</param>
            <param name="no2">no2.</param>
            <param name="o3">o3.</param>
            <param name="so2">so2.</param>
            <param name="pm25">pm25.</param>
            <param name="pm10">pm10.</param>
            <param name="usEpaIndex">usEpaIndex.</param>
            <param name="gbDefraIndex">gbDefraIndex.</param>
        </member>
        <member name="M:IO.Swagger.Model.CurrentAirQuality.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentAirQuality.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentAirQuality.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentAirQuality.Equals(IO.Swagger.Model.CurrentAirQuality)">
            <summary>
            Returns true if CurrentAirQuality instances are equal
            </summary>
            <param name="input">Instance of CurrentAirQuality to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentAirQuality.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentAirQuality.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.CurrentAirQuality.Co">
            <summary>
            Gets or Sets Co
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CurrentAirQuality.No2">
            <summary>
            Gets or Sets No2
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CurrentAirQuality.O3">
            <summary>
            Gets or Sets O3
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CurrentAirQuality.So2">
            <summary>
            Gets or Sets So2
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CurrentAirQuality.Pm25">
            <summary>
            Gets or Sets Pm25
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CurrentAirQuality.Pm10">
            <summary>
            Gets or Sets Pm10
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CurrentAirQuality.UsEpaIndex">
            <summary>
            Gets or Sets UsEpaIndex
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CurrentAirQuality.GbDefraIndex">
            <summary>
            Gets or Sets GbDefraIndex
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.CurrentCondition">
            <summary>
            CurrentCondition
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.CurrentCondition.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.CurrentCondition"/> class.
            </summary>
            <param name="text">text.</param>
            <param name="icon">icon.</param>
            <param name="code">code.</param>
        </member>
        <member name="M:IO.Swagger.Model.CurrentCondition.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentCondition.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentCondition.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentCondition.Equals(IO.Swagger.Model.CurrentCondition)">
            <summary>
            Returns true if CurrentCondition instances are equal
            </summary>
            <param name="input">Instance of CurrentCondition to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentCondition.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.CurrentCondition.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.CurrentCondition.Text">
            <summary>
            Gets or Sets Text
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CurrentCondition.Icon">
            <summary>
            Gets or Sets Icon
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CurrentCondition.Code">
            <summary>
            Gets or Sets Code
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Error400">
            <summary>
            Error400
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Error400.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Error400"/> class.
            </summary>
            <param name="code">code.</param>
            <param name="message">message.</param>
        </member>
        <member name="M:IO.Swagger.Model.Error400.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error400.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error400.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error400.Equals(IO.Swagger.Model.Error400)">
            <summary>
            Returns true if Error400 instances are equal
            </summary>
            <param name="input">Instance of Error400 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error400.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error400.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Error400.Code">
            <summary>
            Gets or Sets Code
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Error400.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Error401">
            <summary>
            Error401
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Error401.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Error401"/> class.
            </summary>
            <param name="code">code.</param>
            <param name="message">message.</param>
        </member>
        <member name="M:IO.Swagger.Model.Error401.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.Equals(IO.Swagger.Model.Error401)">
            <summary>
            Returns true if Error401 instances are equal
            </summary>
            <param name="input">Instance of Error401 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Error401.Code">
            <summary>
            Gets or Sets Code
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Error401.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Error403">
            <summary>
            Error403
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Error403.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Error403"/> class.
            </summary>
            <param name="code">code.</param>
            <param name="message">message.</param>
        </member>
        <member name="M:IO.Swagger.Model.Error403.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.Equals(IO.Swagger.Model.Error403)">
            <summary>
            Returns true if Error403 instances are equal
            </summary>
            <param name="input">Instance of Error403 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Error403.Code">
            <summary>
            Gets or Sets Code
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Error403.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Forecast">
            <summary>
            Forecast
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Forecast.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ForecastForecastday})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Forecast"/> class.
            </summary>
            <param name="forecastday">forecastday.</param>
        </member>
        <member name="M:IO.Swagger.Model.Forecast.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Forecast.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Forecast.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Forecast.Equals(IO.Swagger.Model.Forecast)">
            <summary>
            Returns true if Forecast instances are equal
            </summary>
            <param name="input">Instance of Forecast to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Forecast.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Forecast.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Forecast.Forecastday">
            <summary>
            Gets or Sets Forecastday
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ForecastAstro">
            <summary>
            ForecastAstro
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ForecastAstro.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForecastAstro"/> class.
            </summary>
            <param name="sunrise">sunrise.</param>
            <param name="sunset">sunset.</param>
            <param name="moonrise">moonrise.</param>
            <param name="moonset">moonset.</param>
            <param name="moonPhase">moonPhase.</param>
            <param name="moonIllumination">moonIllumination.</param>
        </member>
        <member name="M:IO.Swagger.Model.ForecastAstro.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastAstro.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastAstro.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastAstro.Equals(IO.Swagger.Model.ForecastAstro)">
            <summary>
            Returns true if ForecastAstro instances are equal
            </summary>
            <param name="input">Instance of ForecastAstro to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastAstro.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastAstro.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ForecastAstro.Sunrise">
            <summary>
            Gets or Sets Sunrise
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastAstro.Sunset">
            <summary>
            Gets or Sets Sunset
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastAstro.Moonrise">
            <summary>
            Gets or Sets Moonrise
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastAstro.Moonset">
            <summary>
            Gets or Sets Moonset
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastAstro.MoonPhase">
            <summary>
            Gets or Sets MoonPhase
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastAstro.MoonIllumination">
            <summary>
            Gets or Sets MoonIllumination
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ForecastCondition">
            <summary>
            ForecastCondition
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ForecastCondition.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForecastCondition"/> class.
            </summary>
            <param name="text">text.</param>
            <param name="icon">icon.</param>
            <param name="code">code.</param>
        </member>
        <member name="M:IO.Swagger.Model.ForecastCondition.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastCondition.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastCondition.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastCondition.Equals(IO.Swagger.Model.ForecastCondition)">
            <summary>
            Returns true if ForecastCondition instances are equal
            </summary>
            <param name="input">Instance of ForecastCondition to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastCondition.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastCondition.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ForecastCondition.Text">
            <summary>
            Gets or Sets Text
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastCondition.Icon">
            <summary>
            Gets or Sets Icon
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastCondition.Code">
            <summary>
            Gets or Sets Code
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ForecastDay">
            <summary>
            ForecastDay
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDay.#ctor(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},IO.Swagger.Model.ForecastDayCondition,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForecastDay"/> class.
            </summary>
            <param name="maxtempC">maxtempC.</param>
            <param name="maxtempF">maxtempF.</param>
            <param name="mintempC">mintempC.</param>
            <param name="mintempF">mintempF.</param>
            <param name="avgtempC">avgtempC.</param>
            <param name="avgtempF">avgtempF.</param>
            <param name="maxwindMph">maxwindMph.</param>
            <param name="maxwindKph">maxwindKph.</param>
            <param name="totalprecipMm">totalprecipMm.</param>
            <param name="totalprecipIn">totalprecipIn.</param>
            <param name="avgvisKm">avgvisKm.</param>
            <param name="avgvisMiles">avgvisMiles.</param>
            <param name="avghumidity">avghumidity.</param>
            <param name="dailyWillItRain">dailyWillItRain.</param>
            <param name="dailyChanceOfRain">dailyChanceOfRain.</param>
            <param name="dailyWillItSnow">dailyWillItSnow.</param>
            <param name="dailyChanceOfSnow">dailyChanceOfSnow.</param>
            <param name="condition">condition.</param>
            <param name="uv">uv.</param>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDay.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDay.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDay.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDay.Equals(IO.Swagger.Model.ForecastDay)">
            <summary>
            Returns true if ForecastDay instances are equal
            </summary>
            <param name="input">Instance of ForecastDay to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDay.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDay.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.MaxtempC">
            <summary>
            Gets or Sets MaxtempC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.MaxtempF">
            <summary>
            Gets or Sets MaxtempF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.MintempC">
            <summary>
            Gets or Sets MintempC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.MintempF">
            <summary>
            Gets or Sets MintempF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.AvgtempC">
            <summary>
            Gets or Sets AvgtempC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.AvgtempF">
            <summary>
            Gets or Sets AvgtempF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.MaxwindMph">
            <summary>
            Gets or Sets MaxwindMph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.MaxwindKph">
            <summary>
            Gets or Sets MaxwindKph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.TotalprecipMm">
            <summary>
            Gets or Sets TotalprecipMm
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.TotalprecipIn">
            <summary>
            Gets or Sets TotalprecipIn
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.AvgvisKm">
            <summary>
            Gets or Sets AvgvisKm
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.AvgvisMiles">
            <summary>
            Gets or Sets AvgvisMiles
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.Avghumidity">
            <summary>
            Gets or Sets Avghumidity
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.DailyWillItRain">
            <summary>
            Gets or Sets DailyWillItRain
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.DailyChanceOfRain">
            <summary>
            Gets or Sets DailyChanceOfRain
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.DailyWillItSnow">
            <summary>
            Gets or Sets DailyWillItSnow
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.DailyChanceOfSnow">
            <summary>
            Gets or Sets DailyChanceOfSnow
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.Condition">
            <summary>
            Gets or Sets Condition
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDay.Uv">
            <summary>
            Gets or Sets Uv
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ForecastDayCondition">
            <summary>
            ForecastDayCondition
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDayCondition.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForecastDayCondition"/> class.
            </summary>
            <param name="text">text.</param>
            <param name="icon">icon.</param>
            <param name="code">code.</param>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDayCondition.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDayCondition.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDayCondition.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDayCondition.Equals(IO.Swagger.Model.ForecastDayCondition)">
            <summary>
            Returns true if ForecastDayCondition instances are equal
            </summary>
            <param name="input">Instance of ForecastDayCondition to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDayCondition.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastDayCondition.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDayCondition.Text">
            <summary>
            Gets or Sets Text
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDayCondition.Icon">
            <summary>
            Gets or Sets Icon
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastDayCondition.Code">
            <summary>
            Gets or Sets Code
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ForecastForecastday">
            <summary>
            ForecastForecastday
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ForecastForecastday.#ctor(System.Nullable{System.DateTime},System.Nullable{System.Int32},IO.Swagger.Model.ForecastDay,IO.Swagger.Model.ForecastAstro,System.Collections.Generic.List{IO.Swagger.Model.ForecastHour})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForecastForecastday"/> class.
            </summary>
            <param name="date">date.</param>
            <param name="dateEpoch">dateEpoch.</param>
            <param name="day">day.</param>
            <param name="astro">astro.</param>
            <param name="hour">hour.</param>
        </member>
        <member name="M:IO.Swagger.Model.ForecastForecastday.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastForecastday.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastForecastday.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastForecastday.Equals(IO.Swagger.Model.ForecastForecastday)">
            <summary>
            Returns true if ForecastForecastday instances are equal
            </summary>
            <param name="input">Instance of ForecastForecastday to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastForecastday.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastForecastday.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ForecastForecastday.Date">
            <summary>
            Gets or Sets Date
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastForecastday.DateEpoch">
            <summary>
            Gets or Sets DateEpoch
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastForecastday.Day">
            <summary>
            Gets or Sets Day
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastForecastday.Astro">
            <summary>
            Gets or Sets Astro
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastForecastday.Hour">
            <summary>
            Gets or Sets Hour
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ForecastHour">
            <summary>
            ForecastHour
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ForecastHour.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},IO.Swagger.Model.ForecastCondition,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ForecastHour"/> class.
            </summary>
            <param name="timeEpoch">timeEpoch.</param>
            <param name="time">time.</param>
            <param name="tempC">tempC.</param>
            <param name="tempF">tempF.</param>
            <param name="isDay">isDay.</param>
            <param name="condition">condition.</param>
            <param name="windMph">windMph.</param>
            <param name="windKph">windKph.</param>
            <param name="windDegree">windDegree.</param>
            <param name="windDir">windDir.</param>
            <param name="pressureMb">pressureMb.</param>
            <param name="pressureIn">pressureIn.</param>
            <param name="precipMm">precipMm.</param>
            <param name="precipIn">precipIn.</param>
            <param name="humidity">humidity.</param>
            <param name="cloud">cloud.</param>
            <param name="feelslikeC">feelslikeC.</param>
            <param name="feelslikeF">feelslikeF.</param>
            <param name="windchillC">windchillC.</param>
            <param name="windchillF">windchillF.</param>
            <param name="heatindexC">heatindexC.</param>
            <param name="heatindexF">heatindexF.</param>
            <param name="dewpointC">dewpointC.</param>
            <param name="dewpointF">dewpointF.</param>
            <param name="willItRain">willItRain.</param>
            <param name="chanceOfRain">chanceOfRain.</param>
            <param name="willItSnow">willItSnow.</param>
            <param name="chanceOfSnow">chanceOfSnow.</param>
            <param name="visKm">visKm.</param>
            <param name="visMiles">visMiles.</param>
            <param name="gustMph">gustMph.</param>
            <param name="gustKph">gustKph.</param>
            <param name="uv">uv.</param>
        </member>
        <member name="M:IO.Swagger.Model.ForecastHour.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastHour.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastHour.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastHour.Equals(IO.Swagger.Model.ForecastHour)">
            <summary>
            Returns true if ForecastHour instances are equal
            </summary>
            <param name="input">Instance of ForecastHour to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastHour.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ForecastHour.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.TimeEpoch">
            <summary>
            Gets or Sets TimeEpoch
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.Time">
            <summary>
            Gets or Sets Time
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.TempC">
            <summary>
            Gets or Sets TempC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.TempF">
            <summary>
            Gets or Sets TempF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.IsDay">
            <summary>
            Gets or Sets IsDay
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.Condition">
            <summary>
            Gets or Sets Condition
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.WindMph">
            <summary>
            Gets or Sets WindMph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.WindKph">
            <summary>
            Gets or Sets WindKph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.WindDegree">
            <summary>
            Gets or Sets WindDegree
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.WindDir">
            <summary>
            Gets or Sets WindDir
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.PressureMb">
            <summary>
            Gets or Sets PressureMb
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.PressureIn">
            <summary>
            Gets or Sets PressureIn
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.PrecipMm">
            <summary>
            Gets or Sets PrecipMm
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.PrecipIn">
            <summary>
            Gets or Sets PrecipIn
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.Humidity">
            <summary>
            Gets or Sets Humidity
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.Cloud">
            <summary>
            Gets or Sets Cloud
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.FeelslikeC">
            <summary>
            Gets or Sets FeelslikeC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.FeelslikeF">
            <summary>
            Gets or Sets FeelslikeF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.WindchillC">
            <summary>
            Gets or Sets WindchillC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.WindchillF">
            <summary>
            Gets or Sets WindchillF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.HeatindexC">
            <summary>
            Gets or Sets HeatindexC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.HeatindexF">
            <summary>
            Gets or Sets HeatindexF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.DewpointC">
            <summary>
            Gets or Sets DewpointC
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.DewpointF">
            <summary>
            Gets or Sets DewpointF
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.WillItRain">
            <summary>
            Gets or Sets WillItRain
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.ChanceOfRain">
            <summary>
            Gets or Sets ChanceOfRain
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.WillItSnow">
            <summary>
            Gets or Sets WillItSnow
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.ChanceOfSnow">
            <summary>
            Gets or Sets ChanceOfSnow
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.VisKm">
            <summary>
            Gets or Sets VisKm
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.VisMiles">
            <summary>
            Gets or Sets VisMiles
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.GustMph">
            <summary>
            Gets or Sets GustMph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.GustKph">
            <summary>
            Gets or Sets GustKph
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ForecastHour.Uv">
            <summary>
            Gets or Sets Uv
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.InlineResponse200">
            <summary>
            InlineResponse200
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse200.#ctor(IO.Swagger.Model.Location,IO.Swagger.Model.Current)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.InlineResponse200"/> class.
            </summary>
            <param name="location">location.</param>
            <param name="current">current.</param>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse200.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse200.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse200.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse200.Equals(IO.Swagger.Model.InlineResponse200)">
            <summary>
            Returns true if InlineResponse200 instances are equal
            </summary>
            <param name="input">Instance of InlineResponse200 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse200.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse200.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse200.Location">
            <summary>
            Gets or Sets Location
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse200.Current">
            <summary>
            Gets or Sets Current
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.InlineResponse2001">
            <summary>
            InlineResponse2001
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2001.#ctor(IO.Swagger.Model.Location,IO.Swagger.Model.Current,IO.Swagger.Model.Forecast,IO.Swagger.Model.Alerts)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.InlineResponse2001"/> class.
            </summary>
            <param name="location">location.</param>
            <param name="current">current.</param>
            <param name="forecast">forecast.</param>
            <param name="alerts">alerts.</param>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2001.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2001.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2001.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2001.Equals(IO.Swagger.Model.InlineResponse2001)">
            <summary>
            Returns true if InlineResponse2001 instances are equal
            </summary>
            <param name="input">Instance of InlineResponse2001 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2001.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2001.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse2001.Location">
            <summary>
            Gets or Sets Location
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse2001.Current">
            <summary>
            Gets or Sets Current
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse2001.Forecast">
            <summary>
            Gets or Sets Forecast
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse2001.Alerts">
            <summary>
            Gets or Sets Alerts
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.InlineResponse2002">
            <summary>
            InlineResponse2002
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2002.#ctor(IO.Swagger.Model.Location,IO.Swagger.Model.Forecast)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.InlineResponse2002"/> class.
            </summary>
            <param name="location">location.</param>
            <param name="forecast">forecast.</param>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2002.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2002.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2002.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2002.Equals(IO.Swagger.Model.InlineResponse2002)">
            <summary>
            Returns true if InlineResponse2002 instances are equal
            </summary>
            <param name="input">Instance of InlineResponse2002 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2002.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2002.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse2002.Location">
            <summary>
            Gets or Sets Location
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse2002.Forecast">
            <summary>
            Gets or Sets Forecast
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.InlineResponse2003">
            <summary>
            InlineResponse2003
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2003.#ctor(IO.Swagger.Model.Location,IO.Swagger.Model.Astronomy)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.InlineResponse2003"/> class.
            </summary>
            <param name="location">location.</param>
            <param name="astronomy">astronomy.</param>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2003.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2003.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2003.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2003.Equals(IO.Swagger.Model.InlineResponse2003)">
            <summary>
            Returns true if InlineResponse2003 instances are equal
            </summary>
            <param name="input">Instance of InlineResponse2003 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2003.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.InlineResponse2003.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse2003.Location">
            <summary>
            Gets or Sets Location
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.InlineResponse2003.Astronomy">
            <summary>
            Gets or Sets Astronomy
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Ip">
            <summary>
            Ip
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Ip.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Ip"/> class.
            </summary>
            <param name="ip">ip.</param>
            <param name="type">type.</param>
            <param name="continentCode">continentCode.</param>
            <param name="continentName">continentName.</param>
            <param name="countryCode">countryCode.</param>
            <param name="countryName">countryName.</param>
            <param name="isEu">isEu.</param>
            <param name="geonameId">geonameId.</param>
            <param name="city">city.</param>
            <param name="region">region.</param>
            <param name="lat">lat.</param>
            <param name="lon">lon.</param>
            <param name="tzId">tzId.</param>
            <param name="localtimeEpoch">localtimeEpoch.</param>
            <param name="localtime">localtime.</param>
        </member>
        <member name="M:IO.Swagger.Model.Ip.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Ip.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Ip.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Ip.Equals(IO.Swagger.Model.Ip)">
            <summary>
            Returns true if Ip instances are equal
            </summary>
            <param name="input">Instance of Ip to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Ip.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Ip.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Ip._Ip">
            <summary>
            Gets or Sets _Ip
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.ContinentCode">
            <summary>
            Gets or Sets ContinentCode
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.ContinentName">
            <summary>
            Gets or Sets ContinentName
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.CountryCode">
            <summary>
            Gets or Sets CountryCode
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.CountryName">
            <summary>
            Gets or Sets CountryName
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.IsEu">
            <summary>
            Gets or Sets IsEu
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.GeonameId">
            <summary>
            Gets or Sets GeonameId
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.City">
            <summary>
            Gets or Sets City
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.Region">
            <summary>
            Gets or Sets Region
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.Lat">
            <summary>
            Gets or Sets Lat
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.Lon">
            <summary>
            Gets or Sets Lon
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.TzId">
            <summary>
            Gets or Sets TzId
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.LocaltimeEpoch">
            <summary>
            Gets or Sets LocaltimeEpoch
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Ip.Localtime">
            <summary>
            Gets or Sets Localtime
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Location">
            <summary>
            Location
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Location.#ctor(System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Location"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="region">region.</param>
            <param name="country">country.</param>
            <param name="lat">lat.</param>
            <param name="lon">lon.</param>
            <param name="tzId">tzId.</param>
            <param name="localtimeEpoch">localtimeEpoch.</param>
            <param name="localtime">localtime.</param>
        </member>
        <member name="M:IO.Swagger.Model.Location.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Location.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Location.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Location.Equals(IO.Swagger.Model.Location)">
            <summary>
            Returns true if Location instances are equal
            </summary>
            <param name="input">Instance of Location to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Location.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Location.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Location.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Location.Region">
            <summary>
            Gets or Sets Region
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Location.Country">
            <summary>
            Gets or Sets Country
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Location.Lat">
            <summary>
            Gets or Sets Lat
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Location.Lon">
            <summary>
            Gets or Sets Lon
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Location.TzId">
            <summary>
            Gets or Sets TzId
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Location.LocaltimeEpoch">
            <summary>
            Gets or Sets LocaltimeEpoch
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Location.Localtime">
            <summary>
            Gets or Sets Localtime
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Search">
            <summary>
            Search
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Search.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Search"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="name">name.</param>
            <param name="region">region.</param>
            <param name="country">country.</param>
            <param name="lat">lat.</param>
            <param name="lon">lon.</param>
            <param name="url">url.</param>
        </member>
        <member name="M:IO.Swagger.Model.Search.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Search.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Search.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Search.Equals(IO.Swagger.Model.Search)">
            <summary>
            Returns true if Search instances are equal
            </summary>
            <param name="input">Instance of Search to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Search.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Search.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Search.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Search.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Search.Region">
            <summary>
            Gets or Sets Region
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Search.Country">
            <summary>
            Gets or Sets Country
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Search.Lat">
            <summary>
            Gets or Sets Lat
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Search.Lon">
            <summary>
            Gets or Sets Lon
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Search.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
    </members>
</doc>
